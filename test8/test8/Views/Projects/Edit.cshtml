@model test8.Models.Project

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Project</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, 4, 40, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.leader, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(x => x.leader, Model._users, "Please select a user")
                @*@{Html.RenderPartial("LoadUser");}*@
                @Html.ValidationMessageFor(model => model.leader, "", new { @class = "text-danger" })
            </div>
            @*@Html.LabelFor(model => model.leader, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.leader, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.leader, "", new { @class = "text-danger" })
                </div>*@
        </div>

        <div class="form-group">
            <div class="control-label col-md-2"><b>Users</b></div>
            <div class="col-md-10">
                <ul>
                    @foreach (var item in Model.access)
                    {
                        if (item.ID == Model.id)
                        {
                            <li>(@Html.ActionLink("Remove", "Remove", new { id = item.ID, user = item.user, redirect = "Edit" })) @item.user</li>
                        }
                    }

                    @*<li>
                        @using (Html.BeginForm("Add", "Project", FormMethod.Get))
                        {
                            <div>
                                @*(@Html.ActionLink("Add", "Remove", new { id = Model.id, user = ViewBag.UserDrop }))
                                @Html.DropDownList("UserDrop", "Please Select a User")
                                <input type="submit" value="Add" />
                            </div>
                        }
                        </li>*@
                    <li>(@Html.ActionLink("Add Users", "Add", new { id = Model.id})) </li>

                </ul>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.time, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.time, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.time, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.startDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.startDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.startDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.endDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.endDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.endDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
